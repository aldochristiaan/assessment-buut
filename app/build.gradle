plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'jacoco'
    id 'com.github.spotbugs' version '6.2.2'
    id 'org.jetbrains.kotlin.plugin.compose' version '2.2.0'
    id 'org.jetbrains.kotlin.plugin.serialization' version '2.2.0'
    id "io.gitlab.arturbosch.detekt" version "1.23.8"
}

android {
    namespace = "com.abnamro.apps.referenceandroid"

    compileSdk = 36

    defaultConfig {
        applicationId = "com.abnamro.apps.referenceandroid"
        minSdkVersion 28
        targetSdkVersion 35
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner = 'androidx.test.runner.AndroidJUnitRunner'
    }

    buildTypes {
        debug {
            testCoverageEnabled = true
        }
        release {
            minifyEnabled = false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    buildFeatures {
        compose = true
    }

    composeOptions {
        kotlinCompilerExtensionVersion = "1.5.1"
    }

    packaging {
        resources {
            excludes += "/META-INF/{AL2.0,LGPL2.1}"
            excludes += "META-INF/INDEX.LIST"
        }
    }

    testOptions {
        animationsDisabled = true

        unitTests.all {
            jacoco {
                includeNoLocationClasses = true
            }
        }

        unitTests.returnDefaultValues = true

        experimentalProperties["android.experimental.enableScreenshotTest"] = true
    }

    lintOptions {
        disable 'AndroidGradlePluginVersion', 'OldTargetApi'
    }

    sourceSets {
        screenshotTest {
            kotlin.srcDirs = ['src/screenshotTest/kotlin']
        }
    }
}

jacoco {
    toolVersion = "0.8.13"
}

detekt {
    source = files("src/main/kotlin", "src/test/kotlin")
    buildUponDefaultConfig = true
    config = files("$rootDir/config/detekt/detekt.yml")
}

// Files to exclude from coverage
def fileFilter = [
        '**/R.class',
        '**/R$*.class',
        '**/BuildConfig.*',
        '**/Manifest*.*',
        '**/*Test*.*',
        'android/**/*.*'
]

// Apply JaCoCo to unit tests
tasks.withType(Test).configureEach {
    jacoco.includeNoLocationClasses = true
    jacoco.excludes = ['jdk.internal.*']
}

// JaCoCo Test Report Task
tasks.register('jacocoTestReport', JacocoReport) {
    dependsOn 'testDebugUnitTest', 'createDebugCoverageReport'

    def debugTree = fileTree(
            dir: "${buildDir}/intermediates/classes/debug",
            excludes: fileFilter
    )
    def mainSrc = "${project.projectDir}/src/main/java"

    sourceDirectories.setFrom(files(mainSrc))
    classDirectories.setFrom(files(debugTree))
    executionData.setFrom(fileTree(
            dir: "$buildDir",
            includes: [
                    "jacoco/testDebugUnitTest.exec",
                    "outputs/code-coverage/connected/*coverage.ec"
            ]
    ))
}

dependencies {
    def composeBom = platform('androidx.compose:compose-bom:2025.07.00')
    implementation composeBom
    androidTestImplementation composeBom

    // Compose & UI Tooling
    implementation 'androidx.compose.ui:ui-tooling-preview'
    debugImplementation 'androidx.compose.ui:ui-tooling'
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'

    // Core Android
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.7.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.2.1'
    implementation 'com.google.android.material:material:1.12.0'

    // Compose Material3
    implementation 'androidx.compose.material3:material3-android:1.3.2'

    // Logging
    implementation 'ch.qos.logback:logback-classic:1.3.15'

    // Screenshot testing
    implementation 'com.android.tools.screenshot:screenshot-validation-api:0.0.1-alpha10'
    androidTestImplementation 'com.android.compose.screenshot:screenshot-test-gradle-plugin:0.0.1-alpha10'
    screenshotTestImplementation 'com.android.tools.screenshot:screenshot-validation-api:1.0.0'

    // Testing
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.2.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.6.1'

    // Ktor
    implementation "io.ktor:ktor-client-android:$ktor_version"
    implementation "io.ktor:ktor-client-core:$ktor_version"
    implementation "io.ktor:ktor-client-serialization-jvm:$ktor_version"
    implementation "io.ktor:ktor-client-logging:$ktor_version"
    implementation "io.ktor:ktor-serialization-kotlinx-json:$ktor_version"
    implementation "io.ktor:ktor-client-content-negotiation:$ktor_version"

    // Detekt Twitter
    detektPlugins("com.twitter.compose.rules:detekt:0.0.26")

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2"

    // Dependency Injection - Koin
    implementation "io.insert-koin:koin-android:$koin_version"
    implementation "io.insert-koin:koin-androidx-compose:$koin_version"
}
