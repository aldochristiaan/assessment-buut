name: "Check and Run UI Tests"

on:
  workflow_dispatch:
    inputs:
      api:
        description: 'API Level (26–34)'
        required: true
        default: '30'
      target:
        description: 'System image target'
        required: true
        default: 'aosp_atd'
        type: choice
        options: [default, google_apis, playstore, aosp_atd, google_atd]
      arch:
        description: 'CPU Architecture'
        required: true
        default: 'x86'
        type: choice
        options: [x86, x86_64, arm64-v8a]
      channel:
        description: 'SDK Channel'
        required: true
        default: 'stable'
        type: choice
        options: [stable, beta, dev, canary]
      emulator:
        description: 'Emulator device'
        required: true
        default: 'pixel_5'

jobs:
  ui-tests:
    name: Run on ${{ github.event.inputs.emulator }} API${{ github.event.inputs.api }}
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - name: 🛎️ Checkout code
        uses: actions/checkout@v4

      - name: ☕ Setup JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: gradle

      - name: 💾 Setup Gradle cache
        uses: gradle/actions/setup-gradle@v3

      - name: ⚡ Enable KVM
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: 📦 Cache AVD
        uses: actions/cache@v4
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: ${{ github.event.inputs.target }}_${{ github.event.inputs.api }}

      - name: 🤖 Create AVD (Snapshot Cache Only)
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ github.event.inputs.api }}
          target: ${{ github.event.inputs.target }}
          arch: ${{ github.event.inputs.arch }}
          profile: ${{ github.event.inputs.emulator }}
          channel: ${{ github.event.inputs.channel }}
          avd-name: ${{ github.event.inputs.target }}_${{ github.event.inputs.api }}
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          disable-spellchecker: true
          script: echo "Snapshot generated for AVD cache."

      - name: 🧪 Run UI Tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ github.event.inputs.api }}
          target: ${{ github.event.inputs.target }}
          arch: ${{ github.event.inputs.arch }}
          profile: ${{ github.event.inputs.emulator }}
          channel: ${{ github.event.inputs.channel }}
          avd-name: ${{ github.event.inputs.target }}_${{ github.event.inputs.api }}
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          disable-spellchecker: true
          script: ./gradlew check connectedCheck

      - name: 📥 Install Allure CLI
        run: |
          sudo apt-get update && sudo apt-get install -y default-jre unzip
          curl -o allure.zip -L https://github.com/allure-framework/allure2/releases/download/2.27.0/allure-2.27.0.zip
          unzip -o allure.zip -d /opt/
          sudo ln -sf /opt/allure-2.27.0/bin/allure /usr/local/bin/allure
          allure --version

      - name: 📊 Generate Allure Report
        if: always()
        run: |
          allure generate -c --single-file app/build/reports/allure-results -o allure-report

      - name: ⬆️ Upload Allure Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-report-${{ github.event.inputs.emulator }}-API${{ github.event.inputs.api }}
          path: allure-report/

      - name: ⬆️ Upload Test Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: android-test-report-${{ github.event.inputs.emulator }}-API${{ github.event.inputs.api }}
          path: app/build/reports
